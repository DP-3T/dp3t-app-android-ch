/*
 * Copyright (c) 2020 Ubique Innovation AG <https://www.ubique.ch>
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * SPDX-License-Identifier: MPL-2.0
 */

plugins {
	id 'com.android.application'
	id 'kotlin-android'
	id 'org.sonarqube' version '2.8'
	id 'com.google.protobuf'

}

apply from: 'backend_certs.gradle'

ext.readProperty = { paramName -> readPropertyWithDefault(paramName, null) }
ext.readPropertyWithDefault = { paramName, defaultValue ->
	if (project.hasProperty(paramName)) {
		return project.getProperties().get(paramName)
	} else {
		Properties properties = new Properties()
		if (project.rootProject.file('local.properties').exists()) {
			properties.load(project.rootProject.file('local.properties').newDataInputStream())
		}
		if (properties.getProperty(paramName) != null) {
			return properties.getProperty(paramName)
		} else {
			return defaultValue
		}
	}
}

android {
	compileSdkVersion 30
	buildToolsVersion "29.0.3"

	defaultConfig {
		applicationId "ch.admin.bag.dp3t"
		minSdkVersion 23
		targetSdkVersion 30
		versionCode 15000
		versionName "1.5.0"
		resConfigs "en", "fr", "de", "it", "pt", "es", "sq", "bs", "hr", "sr", "rm", "tr", "ti"

		buildConfigField "long", "BUILD_TIME", readPropertyWithDefault('buildTimestamp', System.currentTimeMillis()) + 'L'

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		testInstrumentationRunnerArguments clearPackageData: 'true'
	}

	flavorDimensions "version"

	productFlavors.whenObjectAdded { flavor ->
		// generate BuildConfig.IS_FLAVOR_### flags
		String flavorFieldName = "IS_FLAVOR_" + flavor.name.replaceAll("[^a-zA-Z0-9_]", "_").toUpperCase()
		defaultConfig.buildConfigField "boolean", flavorFieldName, "false"
		flavor.buildConfigField "boolean", flavorFieldName, "true"
	}

	productFlavors {
		dev {
			buildConfigField 'boolean', 'DEV_HISTORY', 'true'
			buildConfigField 'String', 'AUTH_CODE_URL', '"https://codegen-service-d.bag.admin.ch/"'
			buildConfigField 'String', 'CONFIG_URL', '"https://www.pt-d.bfs.admin.ch/"'
			buildConfigField 'String', 'BUCKET_URL', '"https://www.pt-d.bfs.admin.ch/"'
			buildConfigField 'String', 'REPORT_URL', '"https://www.pt1-d.bfs.admin.ch/"'
			buildConfigField 'String', 'STATS_URL', '"https://www.pt-d.bfs.admin.ch/"'
			buildConfigField 'String', 'PUBLISHED_CROWDNOTIFIER_KEYS_BASE_URL', '"https://app-dev-ws.notify-me.ch/"'
			buildConfigField "String", "ENTRY_QR_CODE_PREFIX", '"https://qr-d.swisscovid.ch"'
			buildConfigField "String", "TRACE_QR_CODE_PREFIX", '"https://upload-dev.notify-me.ch"'
			buildConfigField 'String', 'CONFIG_CERTIFICATE', "\"${project.backend_certs.dev.CONFIG_CERTIFICATE}\""
			buildConfigField 'String', 'BUCKET_PUBLIC_KEY', "\"${project.backend_certs.dev.BUCKET_PUBLIC_KEY}\""
			applicationIdSuffix '.dev'
			manifestPlaceholders = [qrCodeHostName: "qr-d.swisscovid.ch"]
		}
		tescht {
			buildConfigField 'boolean', 'DEV_HISTORY', 'true'
			buildConfigField 'String', 'AUTH_CODE_URL', '"https://codegen-service-t.bag.admin.ch/"'
			buildConfigField 'String', 'CONFIG_URL', '"https://www.pt-t.bfs.admin.ch/"'
			buildConfigField 'String', 'BUCKET_URL', '"https://www.pt-t.bfs.admin.ch/"'
			buildConfigField 'String', 'REPORT_URL', '"https://www.pt1-t.bfs.admin.ch/"'
			buildConfigField 'String', 'STATS_URL', '"https://www.pt-t.bfs.admin.ch/"'
			buildConfigField 'String', 'PUBLISHED_CROWDNOTIFIER_KEYS_BASE_URL', '"https://app-dev-ws.notify-me.ch/"'
			buildConfigField "String", "ENTRY_QR_CODE_PREFIX", '"https://qr-t.swisscovid.ch"'
			buildConfigField "String", "TRACE_QR_CODE_PREFIX", '"https://upload-dev.notify-me.ch"'
			buildConfigField 'String', 'CONFIG_CERTIFICATE', "\"${project.backend_certs.test.CONFIG_CERTIFICATE}\""
			buildConfigField 'String', 'BUCKET_PUBLIC_KEY', "\"${project.backend_certs.test.BUCKET_PUBLIC_KEY}\""
			applicationIdSuffix '.test'
			manifestPlaceholders = [qrCodeHostName: "qr-t.swisscovid.ch"]
		}
		abnahme {
			buildConfigField 'boolean', 'DEV_HISTORY', 'true'
			buildConfigField 'String', 'AUTH_CODE_URL', '"https://codegen-service-a.bag.admin.ch/"'
			buildConfigField 'String', 'CONFIG_URL', '"https://www.pt-a.bfs.admin.ch/"'
			buildConfigField 'String', 'BUCKET_URL', '"https://www.pt-a.bfs.admin.ch/"'
			buildConfigField 'String', 'REPORT_URL', '"https://www.pt1-a.bfs.admin.ch/"'
			buildConfigField 'String', 'STATS_URL', '"https://www.pt-a.bfs.admin.ch/"'
			buildConfigField 'String', 'PUBLISHED_CROWDNOTIFIER_KEYS_BASE_URL', '"https://app-dev-ws.notify-me.ch/"'
			buildConfigField "String", "ENTRY_QR_CODE_PREFIX", '"https://qr-a.swisscovid.ch"'
			buildConfigField "String", "TRACE_QR_CODE_PREFIX", '"https://upload-dev.notify-me.ch"'
			buildConfigField 'String', 'CONFIG_CERTIFICATE', "\"${project.backend_certs.abnahme.CONFIG_CERTIFICATE}\""
			buildConfigField 'String', 'BUCKET_PUBLIC_KEY', "\"${project.backend_certs.abnahme.BUCKET_PUBLIC_KEY}\""
			applicationIdSuffix '.abnahme'
			manifestPlaceholders = [qrCodeHostName: "qr-a.swisscovid.ch"]
		}
		prod {
			buildConfigField 'boolean', 'DEV_HISTORY', 'false'
			buildConfigField 'String', 'AUTH_CODE_URL', '"https://codegen-service.bag.admin.ch/"'
			buildConfigField 'String', 'CONFIG_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'BUCKET_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'REPORT_URL', '"https://www.pt1.bfs.admin.ch/"'
			buildConfigField 'String', 'STATS_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'PUBLISHED_CROWDNOTIFIER_KEYS_BASE_URL', '"https://app-dev-ws.notify-me.ch/"'
			buildConfigField "String", "ENTRY_QR_CODE_PREFIX", '"https://qr.swisscovid.ch"'
			buildConfigField "String", "TRACE_QR_CODE_PREFIX", '"https://upload-dev.notify-me.ch"'
			buildConfigField 'String', 'CONFIG_CERTIFICATE', "\"${project.backend_certs.prod.CONFIG_CERTIFICATE}\""
			buildConfigField 'String', 'BUCKET_PUBLIC_KEY', "\"${project.backend_certs.prod.BUCKET_PUBLIC_KEY}\""
			manifestPlaceholders = [qrCodeHostName: "qr.swisscovid.ch"]
		}
		log {
			buildConfigField 'boolean', 'DEV_HISTORY', 'true'
			buildConfigField 'String', 'AUTH_CODE_URL', '"https://codegen-service.bag.admin.ch/"'
			buildConfigField 'String', 'CONFIG_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'BUCKET_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'REPORT_URL', '"https://www.pt1.bfs.admin.ch/"'
			buildConfigField 'String', 'STATS_URL', '"https://www.pt.bfs.admin.ch/"'
			buildConfigField 'String', 'PUBLISHED_CROWDNOTIFIER_KEYS_BASE_URL', '"https://app-dev-ws.notify-me.ch/"'
			buildConfigField "String", "ENTRY_QR_CODE_PREFIX", '"https://qr.swisscovid.ch"'
			buildConfigField "String", "TRACE_QR_CODE_PREFIX", '"https://upload-dev.notify-me.ch"'
			buildConfigField 'String', 'CONFIG_CERTIFICATE', "\"${project.backend_certs.prod.CONFIG_CERTIFICATE}\""
			buildConfigField 'String', 'BUCKET_PUBLIC_KEY', "\"${project.backend_certs.prod.BUCKET_PUBLIC_KEY}\""
			manifestPlaceholders = [qrCodeHostName: "qr.swisscovid.ch"]
		}
	}

	signingConfigs {
		release {
			storeFile file(readPropertyWithDefault('keystoreFile', 'testKeystore'))
			storePassword readProperty('keystorePassword')
			keyAlias 'keyAlias'
			keyPassword readProperty('keyAliasPassword')
		}
	}

	buildTypes {
		release {
			shrinkResources false
			setMinifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	compileOptions {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	kotlinOptions {
		jvmTarget = "1.8"
	}

	buildFeatures {
		viewBinding true
	}

	protobuf {
		protoc {
			artifact = 'com.google.protobuf:protoc:3.0.0'
		}
		plugins {
			javalite {
				artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
			}
		}
		generateProtoTasks {
			all().each { task ->
				task.builtins {
					remove java
				}
				task.plugins {
					javalite {}
				}
			}
		}
	}
}


sonarqube {
	properties {
		property "sonar.projectKey", "DP-3T_dp3t-app-android-ch"
		property "sonar.organization", "dp-3t"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectName", "dp3t-app-android-ch"
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
	implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

	def dp3t_sdk_version = '2.3.0-dev-6'
	devImplementation "org.dpppt:dp3t-sdk-android:$dp3t_sdk_version-calibration"
	teschtImplementation "org.dpppt:dp3t-sdk-android:$dp3t_sdk_version"
	abnahmeImplementation "org.dpppt:dp3t-sdk-android:$dp3t_sdk_version"
	prodImplementation "org.dpppt:dp3t-sdk-android:$dp3t_sdk_version"
	logImplementation "org.dpppt:dp3t-sdk-android:$dp3t_sdk_version"

	implementation 'org.crowdnotifier:crowdnotifier-sdk-android:4.0-dev-9'


	implementation 'androidx.appcompat:appcompat:1.2.0'
	implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
	implementation 'androidx.fragment:fragment-ktx:1.3.3'
	implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
	implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
	implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
	implementation 'androidx.viewpager2:viewpager2:1.0.0'
	implementation 'androidx.security:security-crypto:1.0.0-rc03'
	implementation 'androidx.work:work-runtime-ktx:2.5.0'
	implementation "androidx.datastore:datastore:1.0.0-beta01"

	implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
	implementation 'io.reactivex.rxjava3:rxjava:3.0.0'

	implementation 'com.google.android.material:material:1.2.1'
	implementation 'com.google.android.gms:play-services-base:17.5.0'
	implementation 'com.google.protobuf:protobuf-lite:3.0.1'
	implementation('com.squareup.retrofit2:converter-protobuf:2.9.0') { transitive = false }
	implementation 'com.squareup.retrofit2:retrofit:2.9.0'
	implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

	// QR code scanning
	def camerax_version = "1.0.0-rc04"
	implementation "androidx.camera:camera-camera2:${camerax_version}"
	implementation "androidx.camera:camera-lifecycle:${camerax_version}"
	implementation "androidx.camera:camera-view:1.0.0-alpha23"
	//DO NOT UPDATE ZXING TO 3.4.0! (3.4.0 is not compatible with API Level 23 or lower)
	implementation "com.google.zxing:core:3.3.0"

	implementation 'androidx.biometric:biometric:1.1.0'

	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation 'androidx.test:runner:1.3.0'
	androidTestImplementation 'androidx.test:core:1.3.0'
	androidTestImplementation 'androidx.test:rules:1.3.0'
	androidTestImplementation 'androidx.work:work-testing:2.5.0'
	androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.14.7'

}
